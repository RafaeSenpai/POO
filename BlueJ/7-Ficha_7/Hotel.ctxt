#BlueJ class context
comment0.target=Hotel
comment0.text=\n\ Classe\ base\ Hotel\n\ @author\ Rui\ Couto\n\ @version\ 1.0\n\n\ @author\ anr\n\ @version\ 2.0\n\n\ @author\ jfc\n\ @version\ 2.1\n
comment1.params=
comment1.target=Hotel()
comment1.text=\n\ Cria\ uma\ inst\u00E2ncia\ de\ hotel\n
comment10.params=nome
comment10.target=void\ setNome(java.lang.String)
comment10.text=\n\ Definir\ o\ nome\ do\ hotel\n\ @param\ nome\ \n
comment11.params=nquartos
comment11.target=void\ setNumeroQuartos(int)
comment12.params=
comment12.target=java.lang.String\ getLocalidade()
comment12.text=\n\ Obter\ a\ localidade\ do\ hotel\n\ @return\ \n
comment13.params=localidade
comment13.target=void\ setLocalidade(java.lang.String)
comment13.text=\n\ Definir\ a\ localidade\ do\ hotel\n\ @param\ localidade\ \n
comment14.params=
comment14.target=double\ getPrecoBaseQuarto()
comment14.text=\n\ Obter\ o\ pre\u00E7o\ base\ de\ um\ quarto\n\ @return\ \n
comment15.params=precoBaseQuarto
comment15.target=void\ setPrecoBaseQuarto(double)
comment15.text=\n\ Definir\ o\ pre\u00E7o\ base\ do\ quarto\n\ @param\ precoBaseQuarto\ \n
comment16.params=
comment16.target=int\ getNumeroQuartos()
comment16.text=\n\ Obter\ o\ n\u00FAmero\ de\ quartos\ do\ hotel\n
comment17.params=
comment17.target=int\ getEstrelas()
comment17.text=\n\ Obter\ o\ n\u00FAmero\ de\ estrelas\ do\ hotel\n
comment18.params=obj
comment18.target=boolean\ equals(java.lang.Object)
comment18.text=\n\ Compara\ a\ igualdade\ com\ outro\ objecto\n\ @param\ obj\n\ @return\ \n
comment19.params=
comment19.target=java.lang.String\ toString()
comment19.text=\n\ Devolve\ uma\ representa\u00E7\u00E3o\ no\ formato\ textual\n\ @return\ \n
comment2.params=c
comment2.target=Hotel(Hotel)
comment2.text=\n\ Construtor\ por\ c\u00F3pia.\n\ @param\ c\ \n
comment20.params=
comment20.target=int\ hashCode()
comment20.text=\n\ C\u00F3digo\ de\ hash\n\ @return\ o\ hashcode.\ Por\ simplifica\u00E7\u00E3o,\ utiliza-se\ apenas\ o\ hashcode\ de\ String\ (na\ vari\u00E1vel\ de\ inst\u00E2ncia\ c\u00F3digo).\n\ \u00C9\ importante\ alterar\ este\ m\u00E9todo\!\!\n
comment21.params=h
comment21.target=int\ compareTo(Hotel)
comment21.text=\n\ Implementa\u00E7\u00E3o\ da\ ordem\ natural\ de\ compara\u00E7\u00E3o\ de\ inst\u00E2ncias\ de\ Hotel.\n\ Por\ simplifica\u00E7\u00E3o,\ apenas\ se\ est\u00E1\ a\ comparar\ os\ c\u00F3digos.\n\n
comment22.params=
comment22.target=Hotel\ clone()
comment22.text=\n\ Como\ se\ trata\ de\ uma\ classe\ abstrata,\ o\ clone\ nesta\ classe,\ apenas\ deve\ referenciar\ \n\ a\ existencia\ do\ clone\ numa\ subclasse,\ ou\ noutra\ classe\ que\ seja\ um\ caso\ expecifico\ desta\n\ como\ tal,\ aqui\ nesta\ classe\ apenas\ fazemos\ a\ referencia\u00E7\u00E3o\ para\ o\ clone,\ conforme\ se\n\ veifica\ imediatamente\ abaixo\n
comment3.params=codigo\ nome\ localidade\ precoBaseQuarto\ numQuartos\ estrelas\ epoca
comment3.target=Hotel(java.lang.String,\ java.lang.String,\ java.lang.String,\ double,\ int,\ int,\ boolean)
comment3.text=\n\ Construtor\ por\ parametro\n\ @param\ codigo\n\ @param\ nome\n\ @param\ localidade\n\ @param\ precoBaseQuarto\ \n\ @param\ estrelas\n
comment4.params=
comment4.target=double\ getPrecoNoite()
comment4.text=\n\ \ \ \ \ \ \ Trata-se\ de\ um\ metodo\ abstrato\ e\ e\ assim\ que\ se\ define\ porque\ quando\ o\ mesmo\ metodo\ tem\ comportamentos\ diferentes\ em\ classes\ diferentes(classes\ abaixo),\n\ \ \ \ \ \ \ isto\ e,\ classes\ que\ estendem\ esta\ classe,\ Hotel,\ apenas\ se\ define\ nesta\ classe,\ classe\ acima,\ o\ metodo\ como\ sendo\ abstract\ tal\ como\ esta\ abaixo\ definido\n
comment5.params=
comment5.target=java.lang.String\ getCodigo()
comment5.text=\n\ Obter\ o\ c\u00F3digo\ do\ hotel\n\ @return\ \n
comment6.params=x
comment6.target=void\ setEpoca(boolean)
comment6.text=\n\ Definir\ se\ esta\ em\ epoca\ alta\ ou\ nao\n
comment7.params=
comment7.target=boolean\ getEpoca()
comment8.params=codigo
comment8.target=void\ setCodigo(java.lang.String)
comment8.text=\n\ Definir\ o\ c\u00F3digo\ do\ hotel\n\ @param\ codigo\ \n
comment9.params=
comment9.target=java.lang.String\ getNome()
comment9.text=\n\ Obter\ o\ nome\ do\ hotel\n\ @return\ \n
numComments=23
