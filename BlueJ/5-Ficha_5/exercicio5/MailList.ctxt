#BlueJ class context
comment0.params=nome\ mail\ emails
comment0.target=MailList(java.lang.String,\ java.lang.String,\ java.util.List)
comment0.text=\n\ Construtor\ parametrizado\n
comment1.params=
comment1.target=MailList()
comment1.text=\n\ Contrutor\ vazio\n
comment10.params=
comment10.target=java.lang.String\ toString()
comment11.params=
comment11.target=int\ totalEmails()
comment11.text=\n\ Determinar\ o\ total\ de\ emails\ guardados\n
comment12.params=m
comment12.target=void\ adicionarEmail(Mail)
comment12.text=\n\ Guardar\ um\ novo\ email\ recebido\n
comment13.params=endereco
comment13.target=int\ from(java.lang.String)
comment13.text=\n\ Implementar\ com\ iterador\ externo\n
comment14.params=endereco
comment14.target=int\ fromF(java.lang.String)
comment14.text=\n\ Implementar\ com\ iterador\ interno\n
comment15.params=s
comment15.target=java.util.List\ comAssunto(java.lang.String)
comment15.text=\n\ Implementar\ com\ iterador\ externo\n
comment16.params=s
comment16.target=java.util.List\ comAssuntoF(java.lang.String)
comment16.text=\n\ Implementar\ com\ iterador\ interno\n
comment17.params=s
comment17.target=java.util.List\ comAssuntoL(java.lang.String)
comment17.text=\n\ Implementar\ com\ iterador\ externo\n
comment18.params=s
comment18.target=java.util.List\ comAssuntoLF(java.lang.String)
comment18.text=\n\ Implementar\ com\ iterador\ interno\n
comment19.params=data
comment19.target=void\ eliminarRecebidos(java.util.GregorianCalendar)
comment19.text=\n\ Implementar\ com\ iterador\ externo\n
comment2.params=mail
comment2.target=MailList(MailList)
comment2.text=\n\ Construtor\ por\ copia\n
comment20.params=x\ y
comment20.target=boolean\ comparaDatas(java.util.Calendar,\ java.util.Calendar)
comment20.text=\n\ Metodo\ auxiliar\ para\ compara\ datas.\ \u00C9\ private,\ logo\ "nao\ pode\ ser\ invocado\ nas\ instancias"\n
comment21.params=data
comment21.target=void\ eliminarRecebidosF(java.util.GregorianCalendar)
comment21.text=\n\ Implementar\ com\ iterador\ interno\ -\ forEach\n
comment22.params=data
comment22.target=void\ eliminarRecebidosF2(java.util.GregorianCalendar)
comment22.text=\n\ Implementar\ com\ iterador\ interno\ -\ Stream\n
comment23.params=
comment23.target=java.util.List\ emailsDoDia()
comment23.text=\n\ Implementar\ com\ iterador\ externo\n
comment24.params=
comment24.target=java.util.List\ emailsDoDiaF()
comment24.text=\n\ Implementar\ com\ iterador\ externo\n
comment25.params=palavras
comment25.target=void\ antiSpam(java.util.List)
comment25.text=\n\ Implementar\ com\ iterador\ externo\:\n
comment26.params=x\ palavras
comment26.target=boolean\ contemPalavras(Mail,\ java.util.List)
comment26.text=\n\ Metodo\ privado\ auxiliar\ dos\ metodos\ antiSpam\ e\ antiSpamF\n\ -\ recurso\ a\ iterador\ externo\n
comment27.params=palavras
comment27.target=void\ antiSpamF(java.util.List)
comment27.text=\n\ Implementar\ com\ iterador\ interno\:\n
comment28.params=data
comment28.target=void\ eliminar(java.time.LocalDate)
comment28.text=\ //ELIMINAR\ ESTE\ "/*"\ JUNTAMENTE\ COM\ ESTA\ LINHA\ COMENTADA\ PARA\ ACIONAR\ ESTE\ METODO,\ CASO\ NECESS\u00C1RIO\ PARA\ TESTES\n\ \ \ \ public\ void\ eliminar(LocalDate\ data){\n\ \ \ \ \ \ \ LocalDate\ data\ \=\ LocalDate.of(2014,\ 1,\ 15);\ //\ data\ de\ teste,\ para\ nao\ usar\ a\ data\ que\ \u00E9\ passada\ por\ parametro\ ao\ metodo\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \n\ \ \ \ \ \ \ \ Iterator<Mail>\ it\ \=\ caixaCorreio.iterator();\n\ \ \ \ \ \ \ \ Mail\ x\ \=\ it.next();\ \ \ \ \ \ \n\ \ \ \ \ \ \ \ \n\ \ \ \ \ \ \ \ LocalDate\ dataRecepcao\ \=\ LocalDate.of(x.getDataRecepcao().get(Calendar.YEAR),\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ x.getDataRecepcao().get(Calendar.MONTH),\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ x.getDataRecepcao().get(Calendar.DAY_OF_MONTH));\n\n\ \ \ \ \ \ \ \ LocalDate\ dataEnvio\ \=\ LocalDate.of(x.getDataEnvio().get(Calendar.YEAR),\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ x.getDataEnvio().get(Calendar.MONTH),\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ x.getDataEnvio().get(Calendar.DAY_OF_MONTH));\n\ \ \ \ \ \ \ \ \n\ \ \ \ \ \ \ \ while(it.hasNext()){\n\ \ \ \ \ \ \ \ \ \ \ \ if(dataRecepcao.isBefore(data)\ &&\ dataEnvio.isBefore(data)){\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ it.remove();\n\ \ \ \ \ \ \ \ \ \ \ \ }\n\ \ \ \ \ \ \ \ \ \ \ \ x\ \=\ it.next();\n\ \ \ \ \ \ \ \ \ \ \ \ dataRecepcao\ \=\ LocalDate.of(x.getDataRecepcao().get(Calendar.YEAR),\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ x.getDataRecepcao().get(Calendar.MONTH),\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ x.getDataRecepcao().get(Calendar.DAY_OF_MONTH));\n\n\ \ \ \ \ \ \ \ \ \ \ \ dataEnvio\ \=\ LocalDate.of(x.getDataEnvio().get(Calendar.YEAR),\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ x.getDataEnvio().get(Calendar.MONTH),\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ x.getDataEnvio().get(Calendar.DAY_OF_MONTH));\n\n\ \ \ \ \ \ \ \ }\n
comment29.params=data
comment29.target=void\ eliminarF(java.time.LocalDate)
comment29.text=\n\ Implementar\ com\ iterador\ interno\ -\ forEach\n
comment3.params=
comment3.target=java.lang.String\ getProprietario()
comment3.text=\n\ Get's\n
comment30.params=data
comment30.target=void\ eliminarF2(java.time.LocalDate)
comment30.text=\n\ Implementar\ com\ iterador\ interno\ -\ Stram\n
comment31.params=x
comment31.target=java.time.LocalDate\ converteToLocalDate(java.util.Calendar)
comment31.text=\n\ Metodo\ privado\ usado\ para\ converter\ datas\ do\ tipo\ GregorianCalendar\ em\ LocaDate\ ou\ Date.\ \n\ Usado\ nos\ metodos\ elimina\ e\ eliminaF.\n
comment4.params=
comment4.target=java.lang.String\ getEndereco()
comment5.params=
comment5.target=java.util.List\ getEmails()
comment6.params=nome
comment6.target=void\ setProprietario(java.lang.String)
comment6.text=\n\ Set's\n
comment7.params=endereco
comment7.target=void\ setEndereco(java.lang.String)
comment8.params=
comment8.target=MailList\ clone()
comment9.params=o
comment9.target=boolean\ equals(java.lang.Object)
numComments=32
